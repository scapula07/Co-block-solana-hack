tokenAddress=BddAVhMHDUJ4e61RytAPQJ8s5DVyuBSGF8mTwwQpLfLm
tokenAccount=DC4Tk5pux64c9smgCAfbpuSCovYtsxLVwekZ2jBmZ79H


const mnemonic ="Picture state flush snack alpha armed quarter jazz fringe bag nominee joy"
const seed = bip39.mnemonicToSeedSync(mnemonic, ""); // (mnemonic, password)
const payer = Keypair.fromSeed(seed.slice(0, 32));
const mintAuthority = payer
const freezeAuthority =payer

console.log(payer)

const main=async()=>{
    try{
    //     const airdropSignature = await connection.requestAirdrop(
    //         payer.publicKey,
    //         LAMPORTS_PER_SOL,
    //       );
          
    //    const res=   await connection.confirmTransaction(airdropSignature);
    
    //    console.log(res,"res")

    //    const mint = await createMint(
    //     connection,
    //     payer,
    //     mintAuthority.publicKey,
    //     freezeAuthority.publicKey,
    //     9 // We are using 9 to match the CLI decimal default exactly
    //   );


    //   console.log(mint.toBase58());
    // console.log(mint);

    let mintPublickKey = new web3.PublicKey(
        "BddAVhMHDUJ4e61RytAPQJ8s5DVyuBSGF8mTwwQpLfLm",
      );

      let toReceiver =new web3.PublicKey(
        "8e1zdTtdLTZ2JgY3qfMtKEQMCXLMXgzwH4ZYnZhQy7Rk",
      );

     console.log("checking balnace")
    // const mintInfo = await getMint(
    //     connection,
    //     mintPublickKey
    //   )
    //   console.log(mintInfo.supply);
    //   console.log(mintInfo);

    const tokenAccount = await getOrCreateAssociatedTokenAccount(
        connection,
        payer,
        mintPublickKey,
        toReceiver
      )

    //   console.log(tokenAccount.address.toBase58());
    //   console.log(tokenAccount.address,"address");

    let tokenAcctPublickKey = new web3.PublicKey(
        "DC4Tk5pux64c9smgCAfbpuSCovYtsxLVwekZ2jBmZ79H",
      );

  

     const resMin= await mintTo(
        connection,
        payer,
        mintPublickKey,
        tokenAcctPublickKey,
        mintAuthority,
        100000000000 // because decimals for the mint are set to 9 
      )

      console.log(resMin,"resssmin")

      const tokenAccountInfo = await getAccount(
        connection,
        tokenAcctPublickKey
      )
      
   console.log( tokenAccountInfo,"tokeninfo")
    }catch(e){
        console.log(e)
    }
 
      
}

// main()


const anchorProgram=async()=>{
    const COBLOCK_PROGRAM_PUBKEY = new web3.PublicKey("CJK7mK6KtpuZYvtnJiG48Ek6CwM7WNNuYza268nDXn54");

    const provider = new anchor.AnchorProvider(connection, payer, anchor.AnchorProvider.defaultOptions())
         
           const program=new anchor.Program(coBlockprogramIdl, COBLOCK_PROGRAM_PUBKEY, provider)
        
      
        const devAccounts = await program.account.staffProfile.all()
        // console.log(devAccount)
        devAccounts.forEach((account)=>{
            console.log(account)
            console.log(account.account?.authority,"devAcc")
            console.log(account.account?.authority.toBase58(),"devAcc")

          });
         


}

anchorProgram()