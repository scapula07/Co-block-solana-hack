{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"./utils\");\nconst cbor_1 = require(\"./cbor\");\nclass UR {\n  constructor(_cborPayload) {\n    let _type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'bytes';\n    this._cborPayload = _cborPayload;\n    this._type = _type;\n    if (!utils_1.isURType(this._type)) {\n      throw new errors_1.InvalidTypeError();\n    }\n  }\n  static fromBuffer(buf) {\n    return new UR(cbor_1.cborEncode(buf));\n  }\n  static from(value, encoding) {\n    return UR.fromBuffer(Buffer.from(value, encoding));\n  }\n  decodeCBOR() {\n    return cbor_1.cborDecode(this._cborPayload);\n  }\n  get type() {\n    return this._type;\n  }\n  get cbor() {\n    return this._cborPayload;\n  }\n  equals(ur2) {\n    return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n  }\n}\nexports.default = UR;","map":{"version":3,"mappings":";;;;;AAAA;AACA;AACA;AAEA,MAAqBA,EAAE;EACrBC,YACUC,YAAoB,EACG;IAAA,IAAvBC,4EAAgB,OAAO;IADvB,iBAAY,GAAZD,YAAY;IACZ,UAAK,GAALC,KAAK;IAEb,IAAI,CAACC,gBAAQ,CAAC,IAAI,CAACD,KAAK,CAAC,EAAE;MACzB,MAAM,IAAIE,yBAAgB,EAAE;;EAEhC;EAEO,OAAOC,UAAU,CAACC,GAAW;IAClC,OAAO,IAAIP,EAAE,CAACQ,iBAAU,CAACD,GAAG,CAAC,CAAC;EAChC;EAEO,OAAOE,IAAI,CAACC,KAAU,EAAEC,QAAyB;IACtD,OAAOX,EAAE,CAACM,UAAU,CAACM,MAAM,CAACH,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAAC;EACpD;EAEOE,UAAU;IACf,OAAOL,iBAAU,CAAC,IAAI,CAACN,YAAY,CAAC;EACtC;EAEA,IAAIY,IAAI;IAAK,OAAO,IAAI,CAACX,KAAK;EAAE;EAChC,IAAIY,IAAI;IAAK,OAAO,IAAI,CAACb,YAAY;EAAE;EAEhCc,MAAM,CAACC,GAAO;IACnB,OAAO,IAAI,CAACH,IAAI,KAAKG,GAAG,CAACH,IAAI,IAAI,IAAI,CAACC,IAAI,CAACC,MAAM,CAACC,GAAG,CAACF,IAAI,CAAC;EAC7D;;AA3BFG","names":["UR","constructor","_cborPayload","_type","utils_1","errors_1","fromBuffer","buf","cbor_1","from","value","encoding","Buffer","decodeCBOR","type","cbor","equals","ur2","exports"],"sources":["/Users/user/Desktop/solana-hack-1/solana-payroll/node_modules/@ngraveio/bc-ur/src/ur.ts"],"sourcesContent":["import { InvalidTypeError } from \"./errors\";\nimport { isURType } from \"./utils\";\nimport { cborEncode, cborDecode } from './cbor';\n\nexport default class UR {\n  constructor(\n    private _cborPayload: Buffer,\n    private _type: string = 'bytes'\n  ) {\n    if (!isURType(this._type)) {\n      throw new InvalidTypeError();\n    }\n  }\n\n  public static fromBuffer(buf: Buffer) {\n    return new UR(cborEncode(buf));\n  }\n\n  public static from(value: any, encoding?: BufferEncoding) {\n    return UR.fromBuffer(Buffer.from(value, encoding));\n  }\n\n  public decodeCBOR(): Buffer {\n    return cborDecode(this._cborPayload);\n  }\n\n  get type() { return this._type; }\n  get cbor() { return this._cborPayload; }\n\n  public equals(ur2: UR) {\n    return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n  }\n}"]},"metadata":{},"sourceType":"script","externalDependencies":[]}