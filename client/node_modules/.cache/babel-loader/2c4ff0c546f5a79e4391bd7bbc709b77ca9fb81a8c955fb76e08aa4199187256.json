{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoPSBT = void 0;\nconst lib_1 = require(\"./lib\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nclass CryptoPSBT extends RegistryItem_1.RegistryItem {\n  constructor(psbt) {\n    super();\n    this.psbt = psbt;\n    this.getRegistryType = () => RegistryType_1.RegistryTypes.CRYPTO_PSBT;\n    this.getPSBT = () => this.psbt;\n    this.toDataItem = () => {\n      return new lib_1.DataItem(this.psbt);\n    };\n  }\n}\nexports.CryptoPSBT = CryptoPSBT;\nCryptoPSBT.fromDataItem = dataItem => {\n  const psbt = dataItem.getData();\n  if (!psbt) {\n    throw new Error(`#[ur-registry][CryptoPSBT][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`);\n  }\n  return new CryptoPSBT(psbt);\n};\nCryptoPSBT.fromCBOR = _cborPayload => {\n  const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);\n  return CryptoPSBT.fromDataItem(dataItem);\n};","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEA,MAAaA,UAAW,SAAQC,2BAAY;EAG1CC,YAAoBC,IAAY;IAC9B,KAAK,EAAE;IADW,SAAI,GAAJA,IAAI;IAFxB,oBAAe,GAAG,MAAMC,4BAAa,CAACC,WAAW;IAM1C,YAAO,GAAG,MAAM,IAAI,CAACF,IAAI;IAEzB,eAAU,GAAG,MAAK;MACvB,OAAO,IAAIG,cAAQ,CAAC,IAAI,CAACH,IAAI,CAAC;IAChC,CAAC;EAND;;AALFI;AAagBP,uBAAY,GAAIQ,QAAkB,IAAI;EAClD,MAAML,IAAI,GAAGK,QAAQ,CAACC,OAAO,EAAE;EAC/B,IAAI,CAACN,IAAI,EAAE;IACT,MAAM,IAAIO,KAAK,CACb,wFAAwFF,QAAQ,EAAE,CACnG;;EAEH,OAAO,IAAIR,UAAU,CAACG,IAAI,CAAC;AAC7B,CAAC;AAEaH,mBAAQ,GAAIW,YAAoB,IAAI;EAChD,MAAMH,QAAQ,GAAG,0BAAgB,EAACG,YAAY,CAAC;EAC/C,OAAOX,UAAU,CAACY,YAAY,CAACJ,QAAQ,CAAC;AAC1C,CAAC","names":["CryptoPSBT","RegistryItem_1","constructor","psbt","RegistryType_1","CRYPTO_PSBT","lib_1","exports","dataItem","getData","Error","_cborPayload","fromDataItem"],"sources":["/Users/user/Desktop/solana-hack-1/solana-payroll/node_modules/@keystonehq/bc-ur-registry/src/CryptoPSBT.ts"],"sourcesContent":["import { decodeToDataItem, DataItem } from './lib';\nimport { RegistryItem } from './RegistryItem';\nimport { RegistryTypes } from './RegistryType';\n\nexport class CryptoPSBT extends RegistryItem {\n  getRegistryType = () => RegistryTypes.CRYPTO_PSBT;\n\n  constructor(private psbt: Buffer) {\n    super();\n  }\n\n  public getPSBT = () => this.psbt;\n\n  public toDataItem = () => {\n    return new DataItem(this.psbt);\n  };\n\n  public static fromDataItem = (dataItem: DataItem) => {\n    const psbt = dataItem.getData();\n    if (!psbt) {\n      throw new Error(\n        `#[ur-registry][CryptoPSBT][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`,\n      );\n    }\n    return new CryptoPSBT(psbt);\n  };\n\n  public static fromCBOR = (_cborPayload: Buffer) => {\n    const dataItem = decodeToDataItem(_cborPayload);\n    return CryptoPSBT.fromDataItem(dataItem);\n  };\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}