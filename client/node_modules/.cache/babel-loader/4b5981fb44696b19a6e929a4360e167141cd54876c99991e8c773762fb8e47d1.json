{"ast":null,"code":"var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  } else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i + 1] != null) {\n        location[names[i]] = toIntIfInt(match[i + 1]);\n      }\n    }\n  }\n};\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  } else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ? {} :\n  // blank object that will be pushed\n  needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\nexports.parse = function (sdp) {\n  var session = {},\n    media = [],\n    location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({\n        rtp: [],\n        fmtp: []\n      });\n      location = media[media.length - 1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n  session.media = media; // link it up\n  return session;\n};\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length - 1).split(',').reduce(paramReducer, {});\n  });\n};\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid,\n        paused = false;\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};","map":{"version":3,"names":["toIntIfInt","v","String","Number","attachProperties","match","location","names","rawName","i","length","parseReg","obj","content","needsBlank","name","push","keyLocation","reg","grammar","require","validLine","RegExp","prototype","test","bind","exports","parse","sdp","session","media","split","filter","forEach","l","type","slice","rtp","fmtp","j","paramReducer","acc","expr","s","undefined","parseParams","str","reduce","parseFmtpConfig","parsePayloads","toString","map","parseRemoteCandidates","candidates","parts","component","ip","port","parseImageAttributes","item","substring","parseSimulcastStreamList","stream","format","scid","paused"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/sdp-transform/lib/parser.js"],"sourcesContent":["var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}