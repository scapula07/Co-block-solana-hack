{"ast":null,"code":"const Logger = require('./Logger');\nconst {\n  generateRandomNumber\n} = require('./utils');\nconst logger = new Logger('Message');\nclass Message {\n  static parse(raw) {\n    let object;\n    const message = {};\n    try {\n      object = JSON.parse(raw);\n    } catch (error) {\n      logger.error('parse() | invalid JSON: %s', error);\n      return;\n    }\n    if (typeof object !== 'object' || Array.isArray(object)) {\n      logger.error('parse() | not an object');\n      return;\n    }\n\n    // Request.\n    if (object.request) {\n      message.request = true;\n      if (typeof object.method !== 'string') {\n        logger.error('parse() | missing/invalid method field');\n        return;\n      }\n      if (typeof object.id !== 'number') {\n        logger.error('parse() | missing/invalid id field');\n        return;\n      }\n      message.id = object.id;\n      message.method = object.method;\n      message.data = object.data || {};\n    }\n    // Response.\n    else if (object.response) {\n      message.response = true;\n      if (typeof object.id !== 'number') {\n        logger.error('parse() | missing/invalid id field');\n        return;\n      }\n      message.id = object.id;\n\n      // Success.\n      if (object.ok) {\n        message.ok = true;\n        message.data = object.data || {};\n      }\n      // Error.\n      else {\n        message.ok = false;\n        message.errorCode = object.errorCode;\n        message.errorReason = object.errorReason;\n      }\n    }\n    // Notification.\n    else if (object.notification) {\n      message.notification = true;\n      if (typeof object.method !== 'string') {\n        logger.error('parse() | missing/invalid method field');\n        return;\n      }\n      message.method = object.method;\n      message.data = object.data || {};\n    }\n    // Invalid.\n    else {\n      logger.error('parse() | missing request/response field');\n      return;\n    }\n    return message;\n  }\n  static createRequest(method, data) {\n    const request = {\n      request: true,\n      id: generateRandomNumber(),\n      method: method,\n      data: data || {}\n    };\n    return request;\n  }\n  static createSuccessResponse(request, data) {\n    const response = {\n      response: true,\n      id: request.id,\n      ok: true,\n      data: data || {}\n    };\n    return response;\n  }\n  static createErrorResponse(request, errorCode, errorReason) {\n    const response = {\n      response: true,\n      id: request.id,\n      ok: false,\n      errorCode: errorCode,\n      errorReason: errorReason\n    };\n    return response;\n  }\n  static createNotification(method, data) {\n    const notification = {\n      notification: true,\n      method: method,\n      data: data || {}\n    };\n    return notification;\n  }\n}\nmodule.exports = Message;","map":{"version":3,"names":["Logger","require","generateRandomNumber","logger","Message","parse","raw","object","message","JSON","error","Array","isArray","request","method","id","data","response","ok","errorCode","errorReason","notification","createRequest","createSuccessResponse","createErrorResponse","createNotification","module","exports"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/protoo-client/lib/Message.js"],"sourcesContent":["const Logger = require('./Logger');\nconst { generateRandomNumber } = require('./utils');\n\nconst logger = new Logger('Message');\n\nclass Message\n{\n\tstatic parse(raw)\n\t{\n\t\tlet object;\n\t\tconst message = {};\n\n\t\ttry\n\t\t{\n\t\t\tobject = JSON.parse(raw);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tlogger.error('parse() | invalid JSON: %s', error);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof object !== 'object' || Array.isArray(object))\n\t\t{\n\t\t\tlogger.error('parse() | not an object');\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Request.\n\t\tif (object.request)\n\t\t{\n\t\t\tmessage.request = true;\n\n\t\t\tif (typeof object.method !== 'string')\n\t\t\t{\n\t\t\t\tlogger.error('parse() | missing/invalid method field');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof object.id !== 'number')\n\t\t\t{\n\t\t\t\tlogger.error('parse() | missing/invalid id field');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmessage.id = object.id;\n\t\t\tmessage.method = object.method;\n\t\t\tmessage.data = object.data || {};\n\t\t}\n\t\t// Response.\n\t\telse if (object.response)\n\t\t{\n\t\t\tmessage.response = true;\n\n\t\t\tif (typeof object.id !== 'number')\n\t\t\t{\n\t\t\t\tlogger.error('parse() | missing/invalid id field');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmessage.id = object.id;\n\n\t\t\t// Success.\n\t\t\tif (object.ok)\n\t\t\t{\n\t\t\t\tmessage.ok = true;\n\t\t\t\tmessage.data = object.data || {};\n\t\t\t}\n\t\t\t// Error.\n\t\t\telse\n\t\t\t{\n\t\t\t\tmessage.ok = false;\n\t\t\t\tmessage.errorCode = object.errorCode;\n\t\t\t\tmessage.errorReason = object.errorReason;\n\t\t\t}\n\t\t}\n\t\t// Notification.\n\t\telse if (object.notification)\n\t\t{\n\t\t\tmessage.notification = true;\n\n\t\t\tif (typeof object.method !== 'string')\n\t\t\t{\n\t\t\t\tlogger.error('parse() | missing/invalid method field');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmessage.method = object.method;\n\t\t\tmessage.data = object.data || {};\n\t\t}\n\t\t// Invalid.\n\t\telse\n\t\t{\n\t\t\tlogger.error('parse() | missing request/response field');\n\n\t\t\treturn;\n\t\t}\n\n\t\treturn message;\n\t}\n\n\tstatic createRequest(method, data)\n\t{\n\t\tconst request =\n\t\t{\n\t\t\trequest : true,\n\t\t\tid      : generateRandomNumber(),\n\t\t\tmethod  : method,\n\t\t\tdata    : data || {}\n\t\t};\n\n\t\treturn request;\n\t}\n\n\tstatic createSuccessResponse(request, data)\n\t{\n\t\tconst response =\n\t\t{\n\t\t\tresponse : true,\n\t\t\tid       : request.id,\n\t\t\tok       : true,\n\t\t\tdata     : data || {}\n\t\t};\n\n\t\treturn response;\n\t}\n\n\tstatic createErrorResponse(request, errorCode, errorReason)\n\t{\n\t\tconst response =\n\t\t{\n\t\t\tresponse    : true,\n\t\t\tid          : request.id,\n\t\t\tok          : false,\n\t\t\terrorCode   : errorCode,\n\t\t\terrorReason : errorReason\n\t\t};\n\n\t\treturn response;\n\t}\n\n\tstatic createNotification(method, data)\n\t{\n\t\tconst notification =\n\t\t{\n\t\t\tnotification : true,\n\t\t\tmethod       : method,\n\t\t\tdata         : data || {}\n\t\t};\n\n\t\treturn notification;\n\t}\n}\n\nmodule.exports = Message;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}