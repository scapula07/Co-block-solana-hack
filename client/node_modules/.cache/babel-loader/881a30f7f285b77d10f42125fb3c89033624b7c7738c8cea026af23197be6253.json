{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport var AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport var AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport var AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport var BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport var BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport var CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport var CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport var CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport var DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport var DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport var DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport var DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport var DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport var DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport var DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport var DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport var DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport var DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport var LockedDeviceError = createCustomErrorClass(\"LockedDeviceError\");\nexport var DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport var DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport var DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport var DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport var EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport var EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport var FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport var FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport var HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport var InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport var InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport var InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport var LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport var UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport var LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport var LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport var LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport var ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport var ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport var ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport var ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport var ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport var ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport var ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport var ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport var NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport var NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport var NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport var NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport var NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport var NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport var NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport var NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport var NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\nexport var NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport var GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport var PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport var PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport var PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport var MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport var PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport var PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport var RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport var RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport var TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport var UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport var MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport var RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport var UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport var UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport var UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport var UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport var UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport var UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport var UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport var UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport var UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport var UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport var UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport var TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport var TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport var TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport var TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport var DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport var WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport var WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport var WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport var WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport var ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport var CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport var FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport var FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport var FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport var DustLimit = createCustomErrorClass(\"DustLimit\");\nexport var PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport var SyncError = createCustomErrorClass(\"SyncError\");\nexport var PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport var GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport var LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport var LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport var FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\nexport var LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport var NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport var DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport var DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n  HwTransportErrorType[HwTransportErrorType[\"Unknown\"] = 0] = \"Unknown\";\n  HwTransportErrorType[HwTransportErrorType[\"BleLocationServicesDisabled\"] = 1] = \"BleLocationServicesDisabled\";\n  HwTransportErrorType[HwTransportErrorType[\"BleBluetoothUnauthorized\"] = 2] = \"BleBluetoothUnauthorized\";\n  HwTransportErrorType[HwTransportErrorType[\"BleScanStartFailed\"] = 3] = \"BleScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nvar HwTransportError = /** @class */function (_super) {\n  __extends(HwTransportError, _super);\n  function HwTransportError(type, message) {\n    var _this = _super.call(this, message) || this;\n    _this.name = \"HwTransportError\";\n    _this.type = type;\n    // Needed as long as we target < ES6\n    Object.setPrototypeOf(_this, HwTransportError.prototype);\n    return _this;\n  }\n  return HwTransportError;\n}(Error);\nexport { HwTransportError };\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nvar TransportError = /** @class */function (_super) {\n  __extends(TransportError, _super);\n  function TransportError(message, id) {\n    var _this = this;\n    var name = \"TransportError\";\n    _this = _super.call(this, message || name) || this;\n    _this.name = name;\n    _this.message = message;\n    _this.stack = new Error().stack;\n    _this.id = id;\n    return _this;\n  }\n  return TransportError;\n}(Error);\nexport { TransportError };\naddCustomErrorDeserializer(\"TransportError\", function (e) {\n  return new TransportError(e.message, e.id);\n});\nexport var StatusCodes = {\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  CODE_BLOCKED: 0x9840,\n  CODE_NOT_INITIALIZED: 0x9802,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n  CUSTOM_IMAGE_EMPTY: 0x662e,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  FILE_NOT_FOUND: 0x9404,\n  GP_AUTH_FAILED: 0x6300,\n  HALTED: 0x6faa,\n  INCONSISTENT_FILE: 0x9408,\n  INCORRECT_DATA: 0x6a80,\n  INCORRECT_LENGTH: 0x6700,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  INVALID_KCV: 0x9485,\n  INVALID_OFFSET: 0x9402,\n  LICENSING: 0x6f42,\n  LOCKED_DEVICE: 0x5515,\n  MAX_VALUE_REACHED: 0x9850,\n  MEMORY_PROBLEM: 0x9240,\n  MISSING_CRITICAL_PARAMETER: 0x6800,\n  NO_EF_SELECTED: 0x9400,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  OK: 0x9000,\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  TECHNICAL_PROBLEM: 0x6f00,\n  UNKNOWN_APDU: 0x6d02,\n  USER_REFUSED_ON_DEVICE: 0x5501\n};\nexport function getAltStatusMessage(code) {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6800:\n      return \"Missing critical parameter\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n    case 0x5515:\n      return \"Locked device\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport function TransportStatusError(statusCode) {\n  var statusText = Object.keys(StatusCodes).find(function (k) {\n    return StatusCodes[k] === statusCode;\n  }) || \"UNKNOWN_ERROR\";\n  var smsg = getAltStatusMessage(statusCode) || statusText;\n  var statusCodeStr = statusCode.toString(16);\n  var message = \"Ledger device: \".concat(smsg, \" (0x\").concat(statusCodeStr, \")\");\n  // Maps to a LockedDeviceError\n  if (statusCode === StatusCodes.LOCKED_DEVICE) {\n    throw new LockedDeviceError(message);\n  }\n  this.name = \"TransportStatusError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n}\nTransportStatusError.prototype = new Error();\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) {\n  return new TransportStatusError(e.statusCode);\n});","map":{"version":3,"mappings":"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","names":["serializeError","deserializeError","createCustomErrorClass","addCustomErrorDeserializer","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","LockedDeviceError","DisconnectedDevice","DisconnectedDeviceDuringOperation","DeviceExtractOnboardingStateError","DeviceOnboardingStatePollingError","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","FirmwareNotRecognized","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PriorityFeeTooLow","PriorityFeeTooHigh","PriorityFeeHigherThanMaxFee","MaxFeeTooLow","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateFetchFileFail","UpdateIncorrectHash","UpdateIncorrectSig","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportRaceCondition","TransportWebUSBGestureRequired","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","DustLimit","PendingOperation","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","LanguageNotFound","NoDBPathGiven","DBWrongPassword","DBNotReset","HwTransportErrorType","__extends","type","message","_super","_this","name","Object","setPrototypeOf","HwTransportError","prototype","Error","id","stack","e","TransportError","StatusCodes","ACCESS_CONDITION_NOT_FULFILLED","ALGORITHM_NOT_SUPPORTED","CLA_NOT_SUPPORTED","CODE_BLOCKED","CODE_NOT_INITIALIZED","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","CONDITIONS_OF_USE_NOT_SATISFIED","CONTRADICTION_INVALIDATION","CONTRADICTION_SECRET_CODE_STATUS","CUSTOM_IMAGE_BOOTLOADER","CUSTOM_IMAGE_EMPTY","FILE_ALREADY_EXISTS","FILE_NOT_FOUND","GP_AUTH_FAILED","HALTED","INCONSISTENT_FILE","INCORRECT_DATA","INCORRECT_LENGTH","INCORRECT_P1_P2","INS_NOT_SUPPORTED","INVALID_KCV","INVALID_OFFSET","LICENSING","LOCKED_DEVICE","MAX_VALUE_REACHED","MEMORY_PROBLEM","MISSING_CRITICAL_PARAMETER","NO_EF_SELECTED","NOT_ENOUGH_MEMORY_SPACE","OK","PIN_REMAINING_ATTEMPTS","REFERENCED_DATA_NOT_FOUND","SECURITY_STATUS_NOT_SATISFIED","TECHNICAL_PROBLEM","UNKNOWN_APDU","USER_REFUSED_ON_DEVICE","getAltStatusMessage","code","TransportStatusError","statusCode","statusText","keys","find","k","smsg","statusCodeStr","toString"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/@ledgerhq/errors/src/index.ts"],"sourcesContent":["import {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer,\n  LedgerErrorConstructor,\n} from \"./helpers\";\n\nexport {\n  serializeError,\n  deserializeError,\n  createCustomErrorClass,\n  addCustomErrorDeserializer,\n};\n\nexport const AccountNameRequiredError = createCustomErrorClass(\n  \"AccountNameRequired\"\n);\nexport const AccountNotSupported = createCustomErrorClass(\n  \"AccountNotSupported\"\n);\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\n  \"CashAddrNotSupported\"\n);\nexport const CurrencyNotSupported = createCustomErrorClass<\n  { currencyName: string },\n  LedgerErrorConstructor<{ currencyName: string }>\n>(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\n  \"DeviceAppVerifyNotSupported\"\n);\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\n  \"DeviceGenuineSocketEarlyClose\"\n);\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\n  \"DeviceOnDashboardExpected\"\n);\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\n  \"DeviceOnDashboardUnexpected\"\n);\nexport const DeviceInOSUExpected = createCustomErrorClass(\n  \"DeviceInOSUExpected\"\n);\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\n  \"DeviceSocketNoBulkStatus\"\n);\nexport const LockedDeviceError = createCustomErrorClass(\"LockedDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\n  \"DisconnectedDeviceDuringOperation\"\n);\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\n  \"DeviceExtractOnboardingStateError\"\n);\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\n  \"DeviceOnboardingStatePollingError\"\n);\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\n  \"EthAppPleaseEnableContractData\"\n);\nexport const FeeEstimationFailed = createCustomErrorClass(\n  \"FeeEstimationFailed\"\n);\nexport const FirmwareNotRecognized = createCustomErrorClass(\n  \"FirmwareNotRecognized\"\n);\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource =\n  createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\n  \"LatestMCUInstalledError\"\n);\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\n  \"LedgerAPIErrorWithMessage\"\n);\nexport const LedgerAPINotAvailable = createCustomErrorClass(\n  \"LedgerAPINotAvailable\"\n);\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\n  \"ManagerAppAlreadyInstalled\"\n);\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\n  \"ManagerAppRelyOnBTC\"\n);\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\n  \"ManagerAppDepInstallRequired\"\n);\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\n  \"ManagerAppDepUninstallRequired\"\n);\nexport const ManagerDeviceLockedError = createCustomErrorClass(\n  \"ManagerDeviceLocked\"\n);\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerFirmwareNotEnoughSpace\"\n);\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\n  \"ManagerNotEnoughSpace\"\n);\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\n  \"ManagerUninstallBTCDep\"\n);\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\n  \"NotEnoughBalanceToDelegate\"\n);\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\n  \"NotEnoughBalanceInParentAccount\"\n);\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\n  \"NotEnoughSpendableBalance\"\n);\nexport const NotEnoughBalanceBecauseDestinationNotCreated =\n  createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\n  \"NotSupportedLegacyAddress\"\n);\nexport const GasLessThanEstimate = createCustomErrorClass(\n  \"GasLessThanEstimate\"\n);\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\n  \"PriorityFeeHigherThanMaxFee\"\n);\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError =\n  createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError =\n  createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\n  \"RecommendSubAccountsToEmpty\"\n);\nexport const RecommendUndelegation = createCustomErrorClass(\n  \"RecommendUndelegation\"\n);\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\n  \"UnexpectedBootloader\"\n);\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\n  \"MCUNotGenuineToDashboard\"\n);\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountReceive\"\n);\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\n  \"UnavailableTezosOriginatedAccountSend\"\n);\nexport const UpdateFetchFileFail = createCustomErrorClass(\n  \"UpdateFetchFileFail\"\n);\nexport const UpdateIncorrectHash = createCustomErrorClass(\n  \"UpdateIncorrectHash\"\n);\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\n  \"UserRefusedDeviceNameChange\"\n);\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\n  \"UserRefusedFirmwareUpdate\"\n);\nexport const UserRefusedAllowManager = createCustomErrorClass(\n  \"UserRefusedAllowManager\"\n);\nexport const UserRefusedOnDevice = createCustomErrorClass(\n  \"UserRefusedOnDevice\"\n); // TODO rename because it's just for transaction refusal\nexport const TransportOpenUserCancelled = createCustomErrorClass(\n  \"TransportOpenUserCancelled\"\n);\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\n  \"TransportInterfaceNotAvailable\"\n);\nexport const TransportRaceCondition = createCustomErrorClass(\n  \"TransportRaceCondition\"\n);\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\n  \"TransportWebUSBGestureRequired\"\n);\nexport const DeviceShouldStayInApp = createCustomErrorClass(\n  \"DeviceShouldStayInApp\"\n);\nexport const WebsocketConnectionError = createCustomErrorClass(\n  \"WebsocketConnectionError\"\n);\nexport const WebsocketConnectionFailed = createCustomErrorClass(\n  \"WebsocketConnectionFailed\"\n);\nexport const WrongDeviceForAccount = createCustomErrorClass(\n  \"WrongDeviceForAccount\"\n);\nexport const WrongAppForCurrency = createCustomErrorClass(\n  \"WrongAppForCurrency\"\n);\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\n  \"FirmwareOrAppUpdateRequired\"\n);\n\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport enum HwTransportErrorType {\n  Unknown = 0,\n  BleLocationServicesDisabled = 1,\n  BleBluetoothUnauthorized = 2,\n  BleScanStartFailed = 3,\n}\n\n/**\n * Represents an error coming from any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n  type: HwTransportErrorType;\n\n  constructor(type: HwTransportErrorType, message: string) {\n    super(message);\n    this.name = \"HwTransportError\";\n    this.type = type;\n\n    // Needed as long as we target < ES6\n    Object.setPrototypeOf(this, HwTransportError.prototype);\n  }\n}\n\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n  id: string;\n  constructor(message: string, id: string) {\n    const name = \"TransportError\";\n    super(message || name);\n    this.name = name;\n    this.message = message;\n    this.stack = new Error().stack;\n    this.id = id;\n  }\n}\n\naddCustomErrorDeserializer(\n  \"TransportError\",\n  (e) => new TransportError(e.message, e.id)\n);\n\nexport const StatusCodes = {\n  ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n  ALGORITHM_NOT_SUPPORTED: 0x9484,\n  CLA_NOT_SUPPORTED: 0x6e00,\n  CODE_BLOCKED: 0x9840,\n  CODE_NOT_INITIALIZED: 0x9802,\n  COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n  CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n  CONTRADICTION_INVALIDATION: 0x9810,\n  CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n  CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n  CUSTOM_IMAGE_EMPTY: 0x662e,\n  FILE_ALREADY_EXISTS: 0x6a89,\n  FILE_NOT_FOUND: 0x9404,\n  GP_AUTH_FAILED: 0x6300,\n  HALTED: 0x6faa,\n  INCONSISTENT_FILE: 0x9408,\n  INCORRECT_DATA: 0x6a80,\n  INCORRECT_LENGTH: 0x6700,\n  INCORRECT_P1_P2: 0x6b00,\n  INS_NOT_SUPPORTED: 0x6d00,\n  INVALID_KCV: 0x9485,\n  INVALID_OFFSET: 0x9402,\n  LICENSING: 0x6f42,\n  LOCKED_DEVICE: 0x5515,\n  MAX_VALUE_REACHED: 0x9850,\n  MEMORY_PROBLEM: 0x9240,\n  MISSING_CRITICAL_PARAMETER: 0x6800,\n  NO_EF_SELECTED: 0x9400,\n  NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n  OK: 0x9000,\n  PIN_REMAINING_ATTEMPTS: 0x63c0,\n  REFERENCED_DATA_NOT_FOUND: 0x6a88,\n  SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n  TECHNICAL_PROBLEM: 0x6f00,\n  UNKNOWN_APDU: 0x6d02,\n  USER_REFUSED_ON_DEVICE: 0x5501,\n};\n\nexport function getAltStatusMessage(code: number): string | undefined | null {\n  switch (code) {\n    // improve text of most common errors\n    case 0x6700:\n      return \"Incorrect length\";\n    case 0x6800:\n      return \"Missing critical parameter\";\n    case 0x6982:\n      return \"Security not satisfied (dongle locked or have invalid access rights)\";\n    case 0x6985:\n      return \"Condition of use not satisfied (denied by the user?)\";\n    case 0x6a80:\n      return \"Invalid data received\";\n    case 0x6b00:\n      return \"Invalid parameter received\";\n    case 0x5515:\n      return \"Locked device\";\n  }\n  if (0x6f00 <= code && code <= 0x6fff) {\n    return \"Internal error, please report\";\n  }\n}\n\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport function TransportStatusError(statusCode: number): void {\n  const statusText =\n    Object.keys(StatusCodes).find((k) => StatusCodes[k] === statusCode) ||\n    \"UNKNOWN_ERROR\";\n  const smsg = getAltStatusMessage(statusCode) || statusText;\n  const statusCodeStr = statusCode.toString(16);\n  const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n\n  // Maps to a LockedDeviceError\n  if (statusCode === StatusCodes.LOCKED_DEVICE) {\n    throw new LockedDeviceError(message);\n  }\n\n  this.name = \"TransportStatusError\";\n  this.message = message;\n  this.stack = new Error().stack;\n  this.statusCode = statusCode;\n  this.statusText = statusText;\n}\nTransportStatusError.prototype = new Error();\n\naddCustomErrorDeserializer(\n  \"TransportStatusError\",\n  (e) => new TransportStatusError(e.statusCode)\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}