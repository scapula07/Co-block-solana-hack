{"ast":null,"code":"const Logger = require('./Logger');\nconst EnhancedEventEmitter = require('./EnhancedEventEmitter');\nconst Message = require('./Message');\nconst logger = new Logger('Peer');\nclass Peer extends EnhancedEventEmitter {\n  /**\n   * @param {protoo.Transport} transport\n   *\n   * @emits open\n   * @emits {currentAttempt: Number} failed\n   * @emits disconnected\n   * @emits close\n   * @emits {request: protoo.Request, accept: Function, reject: Function} request\n   * @emits {notification: protoo.Notification} notification\n   */\n  constructor(transport) {\n    super(logger);\n    logger.debug('constructor()');\n\n    // Closed flag.\n    // @type {Boolean}\n    this._closed = false;\n\n    // Transport.\n    // @type {protoo.Transport}\n    this._transport = transport;\n\n    // Connected flag.\n    // @type {Boolean}\n    this._connected = false;\n\n    // Custom data object.\n    // @type {Object}\n    this._data = {};\n\n    // Map of pending sent request objects indexed by request id.\n    // @type {Map<Number, Object>}\n    this._sents = new Map();\n\n    // Handle transport.\n    this._handleTransport();\n  }\n\n  /**\n   * Whether the Peer is closed.\n   *\n   * @returns {Boolean}\n   */\n  get closed() {\n    return this._closed;\n  }\n\n  /**\n   * Whether the Peer is connected.\n   *\n   * @returns {Boolean}\n   */\n  get connected() {\n    return this._connected;\n  }\n\n  /**\n   * App custom data.\n   *\n   * @returns {Object}\n   */\n  get data() {\n    return this._data;\n  }\n\n  /**\n   * Invalid setter.\n   */\n  set data(data)\n  // eslint-disable-line no-unused-vars\n  {\n    throw new Error('cannot override data object');\n  }\n\n  /**\n   * Close this Peer and its Transport.\n   */\n  close() {\n    if (this._closed) return;\n    logger.debug('close()');\n    this._closed = true;\n    this._connected = false;\n\n    // Close Transport.\n    this._transport.close();\n\n    // Close every pending sent.\n    for (const sent of this._sents.values()) {\n      sent.close();\n    }\n\n    // Emit 'close' event.\n    this.safeEmit('close');\n  }\n\n  /**\n   * Send a protoo request to the server-side Room.\n   *\n   * @param {String} method\n   * @param {Object} [data]\n   *\n   * @async\n   * @returns {Object} The response data Object if a success response is received.\n   */\n  async request(method) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    const request = Message.createRequest(method, data);\n    this._logger.debug('request() [method:%s, id:%s]', method, request.id);\n\n    // This may throw.\n    await this._transport.send(request);\n    return new Promise((pResolve, pReject) => {\n      const timeout = 1500 * (15 + 0.1 * this._sents.size);\n      const sent = {\n        id: request.id,\n        method: request.method,\n        resolve: data2 => {\n          if (!this._sents.delete(request.id)) return;\n          clearTimeout(sent.timer);\n          pResolve(data2);\n        },\n        reject: error => {\n          if (!this._sents.delete(request.id)) return;\n          clearTimeout(sent.timer);\n          pReject(error);\n        },\n        timer: setTimeout(() => {\n          if (!this._sents.delete(request.id)) return;\n          pReject(new Error('request timeout'));\n        }, timeout),\n        close: () => {\n          clearTimeout(sent.timer);\n          pReject(new Error('peer closed'));\n        }\n      };\n\n      // Add sent stuff to the map.\n      this._sents.set(request.id, sent);\n    });\n  }\n\n  /**\n   * Send a protoo notification to the server-side Room.\n   *\n   * @param {String} method\n   * @param {Object} [data]\n   *\n   * @async\n   */\n  async notify(method) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    const notification = Message.createNotification(method, data);\n    this._logger.debug('notify() [method:%s]', method);\n\n    // This may throw.\n    await this._transport.send(notification);\n  }\n  _handleTransport() {\n    if (this._transport.closed) {\n      this._closed = true;\n      setTimeout(() => {\n        if (this._closed) return;\n        this._connected = false;\n        this.safeEmit('close');\n      });\n      return;\n    }\n    this._transport.on('open', () => {\n      if (this._closed) return;\n      logger.debug('emit \"open\"');\n      this._connected = true;\n      this.safeEmit('open');\n    });\n    this._transport.on('disconnected', () => {\n      if (this._closed) return;\n      logger.debug('emit \"disconnected\"');\n      this._connected = false;\n      this.safeEmit('disconnected');\n    });\n    this._transport.on('failed', currentAttempt => {\n      if (this._closed) return;\n      logger.debug('emit \"failed\" [currentAttempt:%s]', currentAttempt);\n      this._connected = false;\n      this.safeEmit('failed', currentAttempt);\n    });\n    this._transport.on('close', () => {\n      if (this._closed) return;\n      this._closed = true;\n      logger.debug('emit \"close\"');\n      this._connected = false;\n      this.safeEmit('close');\n    });\n    this._transport.on('message', message => {\n      if (message.request) this._handleRequest(message);else if (message.response) this._handleResponse(message);else if (message.notification) this._handleNotification(message);\n    });\n  }\n  _handleRequest(request) {\n    try {\n      this.emit('request',\n      // Request.\n      request,\n      // accept() function.\n      data => {\n        const response = Message.createSuccessResponse(request, data);\n        this._transport.send(response).catch(() => {});\n      },\n      // reject() function.\n      (errorCode, errorReason) => {\n        if (errorCode instanceof Error) {\n          errorReason = errorCode.message;\n          errorCode = 500;\n        } else if (typeof errorCode === 'number' && errorReason instanceof Error) {\n          errorReason = errorReason.message;\n        }\n        const response = Message.createErrorResponse(request, errorCode, errorReason);\n        this._transport.send(response).catch(() => {});\n      });\n    } catch (error) {\n      const response = Message.createErrorResponse(request, 500, String(error));\n      this._transport.send(response).catch(() => {});\n    }\n  }\n  _handleResponse(response) {\n    const sent = this._sents.get(response.id);\n    if (!sent) {\n      logger.error('received response does not match any sent request [id:%s]', response.id);\n      return;\n    }\n    if (response.ok) {\n      sent.resolve(response.data);\n    } else {\n      const error = new Error(response.errorReason);\n      error.code = response.errorCode;\n      sent.reject(error);\n    }\n  }\n  _handleNotification(notification) {\n    this.safeEmit('notification', notification);\n  }\n}\nmodule.exports = Peer;","map":{"version":3,"names":["Logger","require","EnhancedEventEmitter","Message","logger","Peer","constructor","transport","debug","_closed","_transport","_connected","_data","_sents","Map","_handleTransport","closed","connected","data","Error","close","sent","values","safeEmit","request","method","undefined","createRequest","_logger","id","send","Promise","pResolve","pReject","timeout","size","resolve","data2","delete","clearTimeout","timer","reject","error","setTimeout","set","notify","notification","createNotification","on","currentAttempt","message","_handleRequest","response","_handleResponse","_handleNotification","emit","createSuccessResponse","catch","errorCode","errorReason","createErrorResponse","String","get","ok","code","module","exports"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/protoo-client/lib/Peer.js"],"sourcesContent":["const Logger = require('./Logger');\nconst EnhancedEventEmitter = require('./EnhancedEventEmitter');\nconst Message = require('./Message');\n\nconst logger = new Logger('Peer');\n\nclass Peer extends EnhancedEventEmitter\n{\n\t/**\n\t * @param {protoo.Transport} transport\n\t *\n\t * @emits open\n\t * @emits {currentAttempt: Number} failed\n\t * @emits disconnected\n\t * @emits close\n\t * @emits {request: protoo.Request, accept: Function, reject: Function} request\n\t * @emits {notification: protoo.Notification} notification\n\t */\n\tconstructor(transport)\n\t{\n\t\tsuper(logger);\n\n\t\tlogger.debug('constructor()');\n\n\t\t// Closed flag.\n\t\t// @type {Boolean}\n\t\tthis._closed = false;\n\n\t\t// Transport.\n\t\t// @type {protoo.Transport}\n\t\tthis._transport = transport;\n\n\t\t// Connected flag.\n\t\t// @type {Boolean}\n\t\tthis._connected = false;\n\n\t\t// Custom data object.\n\t\t// @type {Object}\n\t\tthis._data = {};\n\n\t\t// Map of pending sent request objects indexed by request id.\n\t\t// @type {Map<Number, Object>}\n\t\tthis._sents = new Map();\n\n\t\t// Handle transport.\n\t\tthis._handleTransport();\n\t}\n\n\t/**\n\t * Whether the Peer is closed.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget closed()\n\t{\n\t\treturn this._closed;\n\t}\n\n\t/**\n\t * Whether the Peer is connected.\n\t *\n\t * @returns {Boolean}\n\t */\n\tget connected()\n\t{\n\t\treturn this._connected;\n\t}\n\n\t/**\n\t * App custom data.\n\t *\n\t * @returns {Object}\n\t */\n\tget data()\n\t{\n\t\treturn this._data;\n\t}\n\n\t/**\n\t * Invalid setter.\n\t */\n\tset data(data) // eslint-disable-line no-unused-vars\n\t{\n\t\tthrow new Error('cannot override data object');\n\t}\n\n\t/**\n\t * Close this Peer and its Transport.\n\t */\n\tclose()\n\t{\n\t\tif (this._closed)\n\t\t\treturn;\n\n\t\tlogger.debug('close()');\n\n\t\tthis._closed = true;\n\t\tthis._connected = false;\n\n\t\t// Close Transport.\n\t\tthis._transport.close();\n\n\t\t// Close every pending sent.\n\t\tfor (const sent of this._sents.values())\n\t\t{\n\t\t\tsent.close();\n\t\t}\n\n\t\t// Emit 'close' event.\n\t\tthis.safeEmit('close');\n\t}\n\n\t/**\n\t * Send a protoo request to the server-side Room.\n\t *\n\t * @param {String} method\n\t * @param {Object} [data]\n\t *\n\t * @async\n\t * @returns {Object} The response data Object if a success response is received.\n\t */\n\tasync request(method, data = undefined)\n\t{\n\t\tconst request = Message.createRequest(method, data);\n\n\t\tthis._logger.debug('request() [method:%s, id:%s]', method, request.id);\n\n\t\t// This may throw.\n\t\tawait this._transport.send(request);\n\n\t\treturn new Promise((pResolve, pReject) =>\n\t\t{\n\t\t\tconst timeout = 1500 * (15 + (0.1 * this._sents.size));\n\t\t\tconst sent =\n\t\t\t{\n\t\t\t\tid      : request.id,\n\t\t\t\tmethod  : request.method,\n\t\t\t\tresolve : (data2) =>\n\t\t\t\t{\n\t\t\t\t\tif (!this._sents.delete(request.id))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tclearTimeout(sent.timer);\n\t\t\t\t\tpResolve(data2);\n\t\t\t\t},\n\t\t\t\treject : (error) =>\n\t\t\t\t{\n\t\t\t\t\tif (!this._sents.delete(request.id))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tclearTimeout(sent.timer);\n\t\t\t\t\tpReject(error);\n\t\t\t\t},\n\t\t\t\ttimer : setTimeout(() =>\n\t\t\t\t{\n\t\t\t\t\tif (!this._sents.delete(request.id))\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tpReject(new Error('request timeout'));\n\t\t\t\t}, timeout),\n\t\t\t\tclose : () =>\n\t\t\t\t{\n\t\t\t\t\tclearTimeout(sent.timer);\n\t\t\t\t\tpReject(new Error('peer closed'));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Add sent stuff to the map.\n\t\t\tthis._sents.set(request.id, sent);\n\t\t});\n\t}\n\n\t/**\n\t * Send a protoo notification to the server-side Room.\n\t *\n\t * @param {String} method\n\t * @param {Object} [data]\n\t *\n\t * @async\n\t */\n\tasync notify(method, data = undefined)\n\t{\n\t\tconst notification = Message.createNotification(method, data);\n\n\t\tthis._logger.debug('notify() [method:%s]', method);\n\n\t\t// This may throw.\n\t\tawait this._transport.send(notification);\n\t}\n\n\t_handleTransport()\n\t{\n\t\tif (this._transport.closed)\n\t\t{\n\t\t\tthis._closed = true;\n\n\t\t\tsetTimeout(() =>\n\t\t\t{\n\t\t\t\tif (this._closed)\n\t\t\t\t\treturn;\n\n\t\t\t\tthis._connected = false;\n\n\t\t\t\tthis.safeEmit('close');\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._transport.on('open', () =>\n\t\t{\n\t\t\tif (this._closed)\n\t\t\t\treturn;\n\n\t\t\tlogger.debug('emit \"open\"');\n\n\t\t\tthis._connected = true;\n\n\t\t\tthis.safeEmit('open');\n\t\t});\n\n\t\tthis._transport.on('disconnected', () =>\n\t\t{\n\t\t\tif (this._closed)\n\t\t\t\treturn;\n\n\t\t\tlogger.debug('emit \"disconnected\"');\n\n\t\t\tthis._connected = false;\n\n\t\t\tthis.safeEmit('disconnected');\n\t\t});\n\n\t\tthis._transport.on('failed', (currentAttempt) =>\n\t\t{\n\t\t\tif (this._closed)\n\t\t\t\treturn;\n\n\t\t\tlogger.debug('emit \"failed\" [currentAttempt:%s]', currentAttempt);\n\n\t\t\tthis._connected = false;\n\n\t\t\tthis.safeEmit('failed', currentAttempt);\n\t\t});\n\n\t\tthis._transport.on('close', () =>\n\t\t{\n\t\t\tif (this._closed)\n\t\t\t\treturn;\n\n\t\t\tthis._closed = true;\n\n\t\t\tlogger.debug('emit \"close\"');\n\n\t\t\tthis._connected = false;\n\n\t\t\tthis.safeEmit('close');\n\t\t});\n\n\t\tthis._transport.on('message', (message) =>\n\t\t{\n\t\t\tif (message.request)\n\t\t\t\tthis._handleRequest(message);\n\t\t\telse if (message.response)\n\t\t\t\tthis._handleResponse(message);\n\t\t\telse if (message.notification)\n\t\t\t\tthis._handleNotification(message);\n\t\t});\n\t}\n\n\t_handleRequest(request)\n\t{\n\t\ttry\n\t\t{\n\t\t\tthis.emit('request',\n\t\t\t\t// Request.\n\t\t\t\trequest,\n\t\t\t\t// accept() function.\n\t\t\t\t(data) =>\n\t\t\t\t{\n\t\t\t\t\tconst response = Message.createSuccessResponse(request, data);\n\n\t\t\t\t\tthis._transport.send(response)\n\t\t\t\t\t\t.catch(() => {});\n\t\t\t\t},\n\t\t\t\t// reject() function.\n\t\t\t\t(errorCode, errorReason) =>\n\t\t\t\t{\n\t\t\t\t\tif (errorCode instanceof Error)\n\t\t\t\t\t{\n\t\t\t\t\t\terrorReason = errorCode.message;\n\t\t\t\t\t\terrorCode = 500;\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof errorCode === 'number' && errorReason instanceof Error)\n\t\t\t\t\t{\n\t\t\t\t\t\terrorReason = errorReason.message;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst response =\n\t\t\t\t\t\tMessage.createErrorResponse(request, errorCode, errorReason);\n\n\t\t\t\t\tthis._transport.send(response)\n\t\t\t\t\t\t.catch(() => {});\n\t\t\t\t});\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconst response = Message.createErrorResponse(request, 500, String(error));\n\n\t\t\tthis._transport.send(response)\n\t\t\t\t.catch(() => {});\n\t\t}\n\t}\n\n\t_handleResponse(response)\n\t{\n\t\tconst sent = this._sents.get(response.id);\n\n\t\tif (!sent)\n\t\t{\n\t\t\tlogger.error(\n\t\t\t\t'received response does not match any sent request [id:%s]', response.id);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (response.ok)\n\t\t{\n\t\t\tsent.resolve(response.data);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst error = new Error(response.errorReason);\n\n\t\t\terror.code = response.errorCode;\n\t\t\tsent.reject(error);\n\t\t}\n\t}\n\n\t_handleNotification(notification)\n\t{\n\t\tthis.safeEmit('notification', notification);\n\t}\n}\n\nmodule.exports = Peer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}