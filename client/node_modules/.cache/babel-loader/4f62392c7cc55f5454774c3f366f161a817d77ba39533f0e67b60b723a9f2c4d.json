{"ast":null,"code":"export var WalletAdapterNetwork;\n(function (WalletAdapterNetwork) {\n  WalletAdapterNetwork[\"Mainnet\"] = \"mainnet-beta\";\n  WalletAdapterNetwork[\"Testnet\"] = \"testnet\";\n  WalletAdapterNetwork[\"Devnet\"] = \"devnet\";\n})(WalletAdapterNetwork || (WalletAdapterNetwork = {}));\nexport function isVersionedTransaction(transaction) {\n  return 'version' in transaction;\n}","map":{"version":3,"mappings":"AAMA,WAAYA,oBAIX;AAJD,WAAYA,oBAAoB;EAC5BA,gDAAwB;EACxBA,2CAAmB;EACnBA,yCAAiB;AACrB,CAAC,EAJWA,oBAAoB,KAApBA,oBAAoB;AAYhC,OAAM,SAAUC,sBAAsB,CAClCC,WAA+C;EAE/C,OAAO,SAAS,IAAIA,WAAW;AACnC","names":["WalletAdapterNetwork","isVersionedTransaction","transaction"],"sources":["/Users/user/Desktop/solana-hack-1/solana-payroll/node_modules/@solana/wallet-adapter-base/src/types.ts"],"sourcesContent":["import type { Transaction, TransactionVersion, VersionedTransaction } from '@solana/web3.js';\nimport type { WalletAdapter } from './adapter.js';\nimport type { MessageSignerWalletAdapter, SignerWalletAdapter } from './signer.js';\n\nexport type Adapter = WalletAdapter | SignerWalletAdapter | MessageSignerWalletAdapter;\n\nexport enum WalletAdapterNetwork {\n    Mainnet = 'mainnet-beta',\n    Testnet = 'testnet',\n    Devnet = 'devnet',\n}\n\nexport type SupportedTransactionVersions = ReadonlySet<TransactionVersion> | null | undefined;\n\nexport type TransactionOrVersionedTransaction<S extends SupportedTransactionVersions> = S extends null | undefined\n    ? Transaction\n    : Transaction | VersionedTransaction;\n\nexport function isVersionedTransaction(\n    transaction: Transaction | VersionedTransaction\n): transaction is VersionedTransaction {\n    return 'version' in transaction;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}