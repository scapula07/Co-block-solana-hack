{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataConsumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst logger = new Logger_1.Logger('DataConsumer');\nclass DataConsumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n  constructor(_ref) {\n    let {\n      id,\n      dataProducerId,\n      dataChannel,\n      sctpStreamParameters,\n      appData\n    } = _ref;\n    super();\n    // Closed flag.\n    this._closed = false;\n    // Observer instance.\n    this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n    logger.debug('constructor()');\n    this._id = id;\n    this._dataProducerId = dataProducerId;\n    this._dataChannel = dataChannel;\n    this._sctpStreamParameters = sctpStreamParameters;\n    this._appData = appData || {};\n    this.handleDataChannel();\n  }\n  /**\n   * DataConsumer id.\n   */\n  get id() {\n    return this._id;\n  }\n  /**\n   * Associated DataProducer id.\n   */\n  get dataProducerId() {\n    return this._dataProducerId;\n  }\n  /**\n   * Whether the DataConsumer is closed.\n   */\n  get closed() {\n    return this._closed;\n  }\n  /**\n   * SCTP stream parameters.\n   */\n  get sctpStreamParameters() {\n    return this._sctpStreamParameters;\n  }\n  /**\n   * DataChannel readyState.\n   */\n  get readyState() {\n    return this._dataChannel.readyState;\n  }\n  /**\n   * DataChannel label.\n   */\n  get label() {\n    return this._dataChannel.label;\n  }\n  /**\n   * DataChannel protocol.\n   */\n  get protocol() {\n    return this._dataChannel.protocol;\n  }\n  /**\n   * DataChannel binaryType.\n   */\n  get binaryType() {\n    return this._dataChannel.binaryType;\n  }\n  /**\n   * Set DataChannel binaryType.\n   */\n  set binaryType(binaryType) {\n    this._dataChannel.binaryType = binaryType;\n  }\n  /**\n   * App custom data.\n   */\n  get appData() {\n    return this._appData;\n  }\n  /**\n   * Invalid setter.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  set appData(appData) {\n    throw new Error('cannot override appData object');\n  }\n  get observer() {\n    return this._observer;\n  }\n  /**\n   * Closes the DataConsumer.\n   */\n  close() {\n    if (this._closed) return;\n    logger.debug('close()');\n    this._closed = true;\n    this._dataChannel.close();\n    this.emit('@close');\n    // Emit observer event.\n    this._observer.safeEmit('close');\n  }\n  /**\n   * Transport was closed.\n   */\n  transportClosed() {\n    if (this._closed) return;\n    logger.debug('transportClosed()');\n    this._closed = true;\n    this._dataChannel.close();\n    this.safeEmit('transportclose');\n    // Emit observer event.\n    this._observer.safeEmit('close');\n  }\n  handleDataChannel() {\n    this._dataChannel.addEventListener('open', () => {\n      if (this._closed) return;\n      logger.debug('DataChannel \"open\" event');\n      this.safeEmit('open');\n    });\n    this._dataChannel.addEventListener('error', event => {\n      if (this._closed) return;\n      let {\n        error\n      } = event;\n      if (!error) error = new Error('unknown DataChannel error');\n      if (error.errorDetail === 'sctp-failure') {\n        logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n      } else {\n        logger.error('DataChannel \"error\" event: %o', error);\n      }\n      this.safeEmit('error', error);\n    });\n    this._dataChannel.addEventListener('close', () => {\n      if (this._closed) return;\n      logger.warn('DataChannel \"close\" event');\n      this._closed = true;\n      this.emit('@close');\n      this.safeEmit('close');\n      // Emit observer event.\n      this._observer.safeEmit('close');\n    });\n    this._dataChannel.addEventListener('message', event => {\n      if (this._closed) return;\n      this.safeEmit('message', event.data);\n    });\n  }\n}\nexports.DataConsumer = DataConsumer;","map":{"version":3,"names":["Object","defineProperty","exports","value","DataConsumer","Logger_1","require","EnhancedEventEmitter_1","logger","Logger","EnhancedEventEmitter","constructor","id","dataProducerId","dataChannel","sctpStreamParameters","appData","_closed","_observer","debug","_id","_dataProducerId","_dataChannel","_sctpStreamParameters","_appData","handleDataChannel","closed","readyState","label","protocol","binaryType","Error","observer","close","emit","safeEmit","transportClosed","addEventListener","event","error","errorDetail","sctpCauseCode","message","warn","data"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/mediasoup-client/lib/DataConsumer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataConsumer = void 0;\nconst Logger_1 = require(\"./Logger\");\nconst EnhancedEventEmitter_1 = require(\"./EnhancedEventEmitter\");\nconst logger = new Logger_1.Logger('DataConsumer');\nclass DataConsumer extends EnhancedEventEmitter_1.EnhancedEventEmitter {\n    constructor({ id, dataProducerId, dataChannel, sctpStreamParameters, appData }) {\n        super();\n        // Closed flag.\n        this._closed = false;\n        // Observer instance.\n        this._observer = new EnhancedEventEmitter_1.EnhancedEventEmitter();\n        logger.debug('constructor()');\n        this._id = id;\n        this._dataProducerId = dataProducerId;\n        this._dataChannel = dataChannel;\n        this._sctpStreamParameters = sctpStreamParameters;\n        this._appData = appData || {};\n        this.handleDataChannel();\n    }\n    /**\n     * DataConsumer id.\n     */\n    get id() {\n        return this._id;\n    }\n    /**\n     * Associated DataProducer id.\n     */\n    get dataProducerId() {\n        return this._dataProducerId;\n    }\n    /**\n     * Whether the DataConsumer is closed.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * SCTP stream parameters.\n     */\n    get sctpStreamParameters() {\n        return this._sctpStreamParameters;\n    }\n    /**\n     * DataChannel readyState.\n     */\n    get readyState() {\n        return this._dataChannel.readyState;\n    }\n    /**\n     * DataChannel label.\n     */\n    get label() {\n        return this._dataChannel.label;\n    }\n    /**\n     * DataChannel protocol.\n     */\n    get protocol() {\n        return this._dataChannel.protocol;\n    }\n    /**\n     * DataChannel binaryType.\n     */\n    get binaryType() {\n        return this._dataChannel.binaryType;\n    }\n    /**\n     * Set DataChannel binaryType.\n     */\n    set binaryType(binaryType) {\n        this._dataChannel.binaryType = binaryType;\n    }\n    /**\n     * App custom data.\n     */\n    get appData() {\n        return this._appData;\n    }\n    /**\n     * Invalid setter.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    set appData(appData) {\n        throw new Error('cannot override appData object');\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Closes the DataConsumer.\n     */\n    close() {\n        if (this._closed)\n            return;\n        logger.debug('close()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.emit('@close');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    /**\n     * Transport was closed.\n     */\n    transportClosed() {\n        if (this._closed)\n            return;\n        logger.debug('transportClosed()');\n        this._closed = true;\n        this._dataChannel.close();\n        this.safeEmit('transportclose');\n        // Emit observer event.\n        this._observer.safeEmit('close');\n    }\n    handleDataChannel() {\n        this._dataChannel.addEventListener('open', () => {\n            if (this._closed)\n                return;\n            logger.debug('DataChannel \"open\" event');\n            this.safeEmit('open');\n        });\n        this._dataChannel.addEventListener('error', (event) => {\n            if (this._closed)\n                return;\n            let { error } = event;\n            if (!error)\n                error = new Error('unknown DataChannel error');\n            if (error.errorDetail === 'sctp-failure') {\n                logger.error('DataChannel SCTP error [sctpCauseCode:%s]: %s', error.sctpCauseCode, error.message);\n            }\n            else {\n                logger.error('DataChannel \"error\" event: %o', error);\n            }\n            this.safeEmit('error', error);\n        });\n        this._dataChannel.addEventListener('close', () => {\n            if (this._closed)\n                return;\n            logger.warn('DataChannel \"close\" event');\n            this._closed = true;\n            this.emit('@close');\n            this.safeEmit('close');\n            // Emit observer event.\n            this._observer.safeEmit('close');\n        });\n        this._dataChannel.addEventListener('message', (event) => {\n            if (this._closed)\n                return;\n            this.safeEmit('message', event.data);\n        });\n    }\n}\nexports.DataConsumer = DataConsumer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}