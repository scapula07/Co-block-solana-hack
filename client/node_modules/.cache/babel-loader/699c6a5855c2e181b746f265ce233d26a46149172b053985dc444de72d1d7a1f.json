{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParticleNetwork = void 0;\nconst auth_1 = require(\"./auth\");\nconst types_1 = require(\"./types\");\nclass ParticleNetwork {\n  constructor(config) {\n    if (!config) {\n      //for solana wallet adapter\n      config = {\n        projectId: \"34c6b829-5b89-44e8-90a9-6d982787b9c9\",\n        clientKey: \"c6Z44Ml4TQeNhctvwYgdSv6DBzfjf6t6CB0JDscR\",\n        appId: \"c1ad1496-5707-4db6-8a2b-3e9f7273d846\",\n        chainName: \"solana\",\n        chainId: 101 //mainnet\n      };\n    }\n\n    if ((!config.chainName || typeof config.chainName === \"string\") && (!config.chainId || typeof config.chainId === \"number\") && typeof config.projectId === \"string\" && typeof config.clientKey === \"string\" && typeof config.appId === \"string\") {\n      if (config.chainName) {\n        if (!Object.keys(types_1.supportChains).includes(config.chainName) || config.chainId && !types_1.supportChains[config.chainName].includes(config.chainId)) {\n          throw types_1.AuthError.unsupportedChain();\n        }\n        if (!config.chainId) {\n          config.chainId = types_1.supportChains[config.chainName][0];\n        }\n      } else {\n        config.chainName = \"ethereum\";\n        config.chainId = 1;\n      }\n      this.config = config;\n      this.auth = new auth_1.Auth(this.config);\n    } else {\n      throw types_1.AuthError.paramsError();\n    }\n  }\n  setAuthTheme(config) {\n    this.auth.setAuthTheme(config);\n  }\n  setChainInfo(chain) {\n    return this.auth.setChainInfo(chain);\n  }\n}\nexports.ParticleNetwork = ParticleNetwork;","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AAEA,MAAaA,eAAe;EAI1BC,YAAYC,MAAe;IACzB,IAAI,CAACA,MAAM,EAAE;MACX;MACAA,MAAM,GAAG;QACPC,SAAS,EAAE,sCAAsC;QACjDC,SAAS,EAAE,0CAA0C;QACrDC,KAAK,EAAE,sCAAsC;QAC7CC,SAAS,EAAE,QAAQ;QACnBC,OAAO,EAAE,GAAG,CAAE;OACf;;;IAEH,IACE,CAAC,CAACL,MAAM,CAACI,SAAS,IAAI,OAAOJ,MAAM,CAACI,SAAS,KAAK,QAAQ,MACzD,CAACJ,MAAM,CAACK,OAAO,IAAI,OAAOL,MAAM,CAACK,OAAO,KAAK,QAAQ,CAAC,IACvD,OAAOL,MAAM,CAACC,SAAS,KAAK,QAAQ,IACpC,OAAOD,MAAM,CAACE,SAAS,KAAK,QAAQ,IACpC,OAAOF,MAAM,CAACG,KAAK,KAAK,QAAQ,EAChC;MACA,IAAIH,MAAM,CAACI,SAAS,EAAE;QACpB,IACE,CAACE,MAAM,CAACC,IAAI,CAACC,qBAAa,CAAC,CAACC,QAAQ,CAACT,MAAM,CAACI,SAAS,CAAC,IACrDJ,MAAM,CAACK,OAAO,IAAI,CAACG,qBAAa,CAACR,MAAM,CAACI,SAAS,CAAC,CAACK,QAAQ,CAACT,MAAM,CAACK,OAAO,CAAE,EAC7E;UACA,MAAMG,iBAAS,CAACE,gBAAgB,EAAE;;QAEpC,IAAI,CAACV,MAAM,CAACK,OAAO,EAAE;UACnBL,MAAM,CAACK,OAAO,GAAGG,qBAAa,CAACR,MAAM,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC;;OAEtD,MAAM;QACLJ,MAAM,CAACI,SAAS,GAAG,UAAU;QAC7BJ,MAAM,CAACK,OAAO,GAAG,CAAC;;MAGpB,IAAI,CAACL,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACW,IAAI,GAAG,IAAIC,WAAI,CAAC,IAAI,CAACZ,MAAM,CAAC;KAClC,MAAM;MACL,MAAMQ,iBAAS,CAACK,WAAW,EAAE;;EAEjC;EAEOC,YAAY,CAACd,MAAyD;IAC3E,IAAI,CAACW,IAAI,CAACG,YAAY,CAACd,MAAM,CAAC;EAChC;EAEOe,YAAY,CAACC,KAAgB;IAClC,OAAO,IAAI,CAACL,IAAI,CAACI,YAAY,CAACC,KAAK,CAAC;EACtC;;AAlDFC","names":["ParticleNetwork","constructor","config","projectId","clientKey","appId","chainName","chainId","Object","keys","types_1","includes","unsupportedChain","auth","auth_1","paramsError","setAuthTheme","setChainInfo","chain","exports"],"sources":["../src/particle-network.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}