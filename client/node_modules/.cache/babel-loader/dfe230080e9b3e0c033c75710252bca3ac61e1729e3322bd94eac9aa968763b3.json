{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bytes = void 0;\nconst lib_1 = require(\"./lib\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nclass Bytes extends RegistryItem_1.RegistryItem {\n  constructor(bytes) {\n    super();\n    this.bytes = bytes;\n    this.getRegistryType = () => {\n      return RegistryType_1.RegistryTypes.BYTES;\n    };\n    this.getData = () => this.bytes;\n    this.toDataItem = () => {\n      return new lib_1.DataItem(this.bytes);\n    };\n  }\n}\nexports.Bytes = Bytes;\nBytes.fromDataItem = dataItem => {\n  const bytes = dataItem.getData();\n  if (!bytes) {\n    throw new Error(`#[ur-registry][Bytes][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`);\n  }\n  return new Bytes(bytes);\n};\nBytes.fromCBOR = _cborPayload => {\n  const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);\n  return Bytes.fromDataItem(dataItem);\n};","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AAEA,MAAaA,KAAM,SAAQC,2BAAY;EAKrCC,YAAoBC,KAAa;IAC/B,KAAK,EAAE;IADW,UAAK,GAALA,KAAK;IAJzB,oBAAe,GAAG,MAAK;MACrB,OAAOC,4BAAa,CAACC,KAAK;IAC5B,CAAC;IAMD,YAAO,GAAG,MAAM,IAAI,CAACF,KAAK;IAE1B,eAAU,GAAG,MAAK;MAChB,OAAO,IAAIG,cAAQ,CAAC,IAAI,CAACH,KAAK,CAAC;IACjC,CAAC;EAND;;AAPFI;AAegBP,kBAAY,GAAIQ,QAAkB,IAAI;EAClD,MAAML,KAAK,GAAGK,QAAQ,CAACC,OAAO,EAAE;EAChC,IAAI,CAACN,KAAK,EAAE;IACV,MAAM,IAAIO,KAAK,CACb,mFAAmFF,QAAQ,EAAE,CAC9F;;EAEH,OAAO,IAAIR,KAAK,CAACG,KAAK,CAAC;AACzB,CAAC;AAEaH,cAAQ,GAAIW,YAAoB,IAAI;EAChD,MAAMH,QAAQ,GAAG,0BAAgB,EAACG,YAAY,CAAC;EAC/C,OAAOX,KAAK,CAACY,YAAY,CAACJ,QAAQ,CAAC;AACrC,CAAC","names":["Bytes","RegistryItem_1","constructor","bytes","RegistryType_1","BYTES","lib_1","exports","dataItem","getData","Error","_cborPayload","fromDataItem"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/@keystonehq/bc-ur-registry/src/Bytes.ts"],"sourcesContent":["import { decodeToDataItem, DataItem } from './lib';\nimport { RegistryItem } from './RegistryItem';\nimport { RegistryTypes } from './RegistryType';\n\nexport class Bytes extends RegistryItem {\n  getRegistryType = () => {\n    return RegistryTypes.BYTES;\n  };\n\n  constructor(private bytes: Buffer) {\n    super();\n  }\n\n  getData = () => this.bytes;\n\n  toDataItem = () => {\n    return new DataItem(this.bytes);\n  };\n\n  public static fromDataItem = (dataItem: DataItem) => {\n    const bytes = dataItem.getData();\n    if (!bytes) {\n      throw new Error(\n        `#[ur-registry][Bytes][fn.fromDataItem]: decoded [dataItem][#data] is undefined: ${dataItem}`,\n      );\n    }\n    return new Bytes(bytes);\n  };\n\n  public static fromCBOR = (_cborPayload: Buffer) => {\n    const dataItem = decodeToDataItem(_cborPayload);\n    return Bytes.fromDataItem(dataItem);\n  };\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}