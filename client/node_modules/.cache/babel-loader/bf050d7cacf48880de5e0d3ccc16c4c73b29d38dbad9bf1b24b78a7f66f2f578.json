{"ast":null,"code":"/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar errorClasses = {};\nvar deserializers = {};\nexport var addCustomErrorDeserializer = function (name, deserializer) {\n  deserializers[name] = deserializer;\n};\nexport var createCustomErrorClass = function (name) {\n  var CustomErrorClass = /** @class */function (_super) {\n    __extends(CustomErrorClass, _super);\n    function CustomErrorClass(message, fields, options) {\n      var _this =\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      _super.call(this, message || name, options) || this;\n      // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n      Object.setPrototypeOf(_this, CustomErrorClass.prototype);\n      _this.name = name;\n      if (fields) {\n        for (var k in fields) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          _this[k] = fields[k];\n        }\n      }\n      if (options && isObject(options) && \"cause\" in options && !(\"cause\" in _this)) {\n        // .cause was specified but the superconstructor\n        // did not create an instance property.\n        var cause = options.cause;\n        _this.cause = cause;\n        if (\"stack\" in cause) {\n          _this.stack = _this.stack + \"\\nCAUSE: \" + cause.stack;\n        }\n      }\n      return _this;\n    }\n    return CustomErrorClass;\n  }(Error);\n  errorClasses[name] = CustomErrorClass;\n  return CustomErrorClass;\n};\nfunction isObject(value) {\n  return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport var deserializeError = function (object) {\n  if (object && typeof object === \"object\") {\n    try {\n      if (typeof object.message === \"string\") {\n        var msg = JSON.parse(object.message);\n        if (msg.message && msg.name) {\n          object = msg;\n        }\n      }\n    } catch (e) {\n      // nothing\n    }\n    var error = void 0;\n    if (typeof object.name === \"string\") {\n      var name_1 = object.name;\n      var des = deserializers[name_1];\n      if (des) {\n        error = des(object);\n      } else {\n        var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\n        if (!constructor) {\n          console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\n          constructor = createCustomErrorClass(name_1);\n        }\n        error = Object.create(constructor.prototype);\n        try {\n          for (var prop in object) {\n            if (object.hasOwnProperty(prop)) {\n              error[prop] = object[prop];\n            }\n          }\n        } catch (e) {\n          // sometimes setting a property can fail (e.g. .name)\n        }\n      }\n    } else {\n      if (typeof object.message === \"string\") {\n        error = new Error(object.message);\n      }\n    }\n    if (error && !error.stack && Error.captureStackTrace) {\n      Error.captureStackTrace(error, deserializeError);\n    }\n    return error;\n  }\n  return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport var serializeError = function (value) {\n  if (!value) return value;\n  if (typeof value === \"object\") {\n    return destroyCircular(value, []);\n  }\n  if (typeof value === \"function\") {\n    return \"[Function: \".concat(value.name || \"anonymous\", \"]\");\n  }\n  return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n  var e_1, _a;\n  var to = {};\n  seen.push(from);\n  try {\n    for (var _b = __values(Object.keys(from)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var key = _c.value;\n      var value = from[key];\n      if (typeof value === \"function\") {\n        continue;\n      }\n      if (!value || typeof value !== \"object\") {\n        to[key] = value;\n        continue;\n      }\n      if (seen.indexOf(from[key]) === -1) {\n        to[key] = destroyCircular(from[key], seen.slice(0));\n        continue;\n      }\n      to[key] = \"[Circular]\";\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b[\"return\"])) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  if (typeof from.name === \"string\") {\n    to.name = from.name;\n  }\n  if (typeof from.message === \"string\") {\n    to.message = from.message;\n  }\n  if (typeof from.stack === \"string\") {\n    to.stack = from.stack;\n  }\n  return to;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,EAAE;AACvB,IAAMC,aAAa,GAAG,EAAE;AAExB,OAAO,IAAMC,0BAA0B,GAAG,UACxCC,IAAY,EACZC,YAA+B;EAE/BH,aAAa,CAACE,IAAI,CAAC,GAAGC,YAAY;AACpC,CAAC;AASD,OAAO,IAAMC,sBAAsB,GAAG,UAIpCF,IAAY;EAEZ;IAA+BG;IAE7B,0BAAYC,OAAgB,EAAEC,MAAU,EAAEC,OAAa;MAAvD;MACE;MACA;MACAC,kBAAMH,OAAO,IAAIJ,IAAI,EAAEM,OAAO,CAAC;MAC/B;MACAE,MAAM,CAACC,cAAc,CAACC,KAAI,EAAEC,gBAAgB,CAACC,SAAS,CAAC;MACvDF,KAAI,CAACV,IAAI,GAAGA,IAAI;MAChB,IAAIK,MAAM,EAAE;QACV,KAAK,IAAMQ,CAAC,IAAIR,MAAM,EAAE;UACtB;UACA;UACAK,KAAI,CAACG,CAAC,CAAC,GAAGR,MAAM,CAACQ,CAAC,CAAC;;;MAGvB,IACEP,OAAO,IACPQ,QAAQ,CAACR,OAAO,CAAC,IACjB,OAAO,IAAIA,OAAO,IAClB,EAAE,OAAO,IAAII,KAAI,CAAC,EAClB;QACA;QACA;QACA,IAAMK,KAAK,GAAGT,OAAO,CAACS,KAAK;QAC3BL,KAAI,CAACK,KAAK,GAAGA,KAAK;QAClB,IAAI,OAAO,IAAIA,KAAK,EAAE;UACpBL,KAAI,CAACM,KAAK,GAAGN,KAAI,CAACM,KAAK,GAAG,WAAW,GAAGD,KAAK,CAACC,KAAK;;;;IAGzD;IACF,uBAAC;EAAD,CAAC,CA/B8BC,KAAK;EAiCpCpB,YAAY,CAACG,IAAI,CAAC,GAAGW,gBAAgB;EAErC,OAAOA,gBAAgC;AACzC,CAAC;AAED,SAASG,QAAQ,CAACI,KAAK;EACrB,OAAO,OAAOA,KAAK,KAAK,QAAQ;AAClC;AAEA;AACA,OAAO,IAAMC,gBAAgB,GAAG,UAACC,MAAW;EAC1C,IAAIA,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IACxC,IAAI;MACF,IAAI,OAAOA,MAAM,CAAChB,OAAO,KAAK,QAAQ,EAAE;QACtC,IAAMiB,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAChB,OAAO,CAAC;QACtC,IAAIiB,GAAG,CAACjB,OAAO,IAAIiB,GAAG,CAACrB,IAAI,EAAE;UAC3BoB,MAAM,GAAGC,GAAG;;;KAGjB,CAAC,OAAOG,CAAC,EAAE;MACV;IAAA;IAGF,IAAIC,KAAK;IACT,IAAI,OAAOL,MAAM,CAACpB,IAAI,KAAK,QAAQ,EAAE;MAC3B,UAAI,GAAKoB,MAAM,KAAX;MACZ,IAAMM,GAAG,GAAG5B,aAAa,CAAC6B,MAAI,CAAC;MAC/B,IAAID,GAAG,EAAE;QACPD,KAAK,GAAGC,GAAG,CAACN,MAAM,CAAC;OACpB,MAAM;QACL,IAAIQ,WAAW,GAAGD,MAAI,KAAK,OAAO,GAAGV,KAAK,GAAGpB,YAAY,CAAC8B,MAAI,CAAC;QAE/D,IAAI,CAACC,WAAW,EAAE;UAChBC,OAAO,CAACC,IAAI,CAAC,kCAAkC,GAAGH,MAAI,GAAG,GAAG,CAAC;UAC7DC,WAAW,GAAG1B,sBAAsB,CAACyB,MAAI,CAAC;;QAG5CF,KAAK,GAAGjB,MAAM,CAACuB,MAAM,CAACH,WAAW,CAAChB,SAAS,CAAC;QAC5C,IAAI;UACF,KAAK,IAAMoB,IAAI,IAAIZ,MAAM,EAAE;YACzB,IAAIA,MAAM,CAACa,cAAc,CAACD,IAAI,CAAC,EAAE;cAC/BP,KAAK,CAACO,IAAI,CAAC,GAAGZ,MAAM,CAACY,IAAI,CAAC;;;SAG/B,CAAC,OAAOR,CAAC,EAAE;UACV;QAAA;;KAGL,MAAM;MACL,IAAI,OAAOJ,MAAM,CAAChB,OAAO,KAAK,QAAQ,EAAE;QACtCqB,KAAK,GAAG,IAAIR,KAAK,CAACG,MAAM,CAAChB,OAAO,CAAC;;;IAIrC,IAAIqB,KAAK,IAAI,CAACA,KAAK,CAACT,KAAK,IAAIC,KAAK,CAACiB,iBAAiB,EAAE;MACpDjB,KAAK,CAACiB,iBAAiB,CAACT,KAAK,EAAEN,gBAAgB,CAAC;;IAElD,OAAOM,KAAK;;EAEd,OAAO,IAAIR,KAAK,CAACkB,MAAM,CAACf,MAAM,CAAC,CAAC;AAClC,CAAC;AAED;AACA,OAAO,IAAMgB,cAAc,GAAG,UAC5BlB,KAAgD;EAEhD,IAAI,CAACA,KAAK,EAAE,OAAOA,KAAK;EACxB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOmB,eAAe,CAACnB,KAAK,EAAE,EAAE,CAAC;;EAEnC,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;IAC/B,OAAO,qBAAcA,KAAK,CAAClB,IAAI,IAAI,WAAW,MAAG;;EAEnD,OAAOkB,KAAK;AACd,CAAC;AAQD;AACA,SAASmB,eAAe,CAACC,IAAQ,EAAEC,IAAe;;EAChD,IAAMC,EAAE,GAAO,EAAE;EACjBD,IAAI,CAACE,IAAI,CAACH,IAAI,CAAC;;IACf,KAAkB,wBAAM,CAACI,IAAI,CAACJ,IAAI,CAAC,6CAAE;MAAhC,IAAMK,GAAG;MACZ,IAAMzB,KAAK,GAAGoB,IAAI,CAACK,GAAG,CAAC;MACvB,IAAI,OAAOzB,KAAK,KAAK,UAAU,EAAE;QAC/B;;MAEF,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QACvCsB,EAAE,CAACG,GAAG,CAAC,GAAGzB,KAAK;QACf;;MAEF,IAAIqB,IAAI,CAACK,OAAO,CAACN,IAAI,CAACK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAClCH,EAAE,CAACG,GAAG,CAAC,GAAGN,eAAe,CAACC,IAAI,CAACK,GAAG,CAAC,EAAEJ,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;QACnD;;MAEFL,EAAE,CAACG,GAAG,CAAC,GAAG,YAAY;;;;;;;;;;;;;EAExB,IAAI,OAAOL,IAAI,CAACtC,IAAI,KAAK,QAAQ,EAAE;IACjCwC,EAAE,CAACxC,IAAI,GAAGsC,IAAI,CAACtC,IAAI;;EAErB,IAAI,OAAOsC,IAAI,CAAClC,OAAO,KAAK,QAAQ,EAAE;IACpCoC,EAAE,CAACpC,OAAO,GAAGkC,IAAI,CAAClC,OAAO;;EAE3B,IAAI,OAAOkC,IAAI,CAACtB,KAAK,KAAK,QAAQ,EAAE;IAClCwB,EAAE,CAACxB,KAAK,GAAGsB,IAAI,CAACtB,KAAK;;EAEvB,OAAOwB,EAAE;AACX","names":["errorClasses","deserializers","addCustomErrorDeserializer","name","deserializer","createCustomErrorClass","__extends","message","fields","options","_super","Object","setPrototypeOf","_this","CustomErrorClass","prototype","k","isObject","cause","stack","Error","value","deserializeError","object","msg","JSON","parse","e","error","des","name_1","constructor","console","warn","create","prop","hasOwnProperty","captureStackTrace","String","serializeError","destroyCircular","from","seen","to","push","keys","key","indexOf","slice"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/@ledgerhq/errors/src/helpers.ts"],"sourcesContent":["/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\n\nconst errorClasses = {};\nconst deserializers = {};\n\nexport const addCustomErrorDeserializer = (\n  name: string,\n  deserializer: (obj: any) => any\n): void => {\n  deserializers[name] = deserializer;\n};\n\nexport interface LedgerErrorConstructor<F extends { [key: string]: unknown }>\n  extends ErrorConstructor {\n  new (message?: string, fields?: F, options?: any): Error;\n  (message?: string, fields?: F, options?: any): Error;\n  readonly prototype: Error;\n}\n\nexport const createCustomErrorClass = <\n  F extends { [key: string]: unknown },\n  T extends LedgerErrorConstructor<F>\n>(\n  name: string\n): T => {\n  class CustomErrorClass extends Error {\n    cause?: Error;\n    constructor(message?: string, fields?: F, options?: any) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      super(message || name, options);\n      // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n      Object.setPrototypeOf(this, CustomErrorClass.prototype);\n      this.name = name;\n      if (fields) {\n        for (const k in fields) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          this[k] = fields[k];\n        }\n      }\n      if (\n        options &&\n        isObject(options) &&\n        \"cause\" in options &&\n        !(\"cause\" in this)\n      ) {\n        // .cause was specified but the superconstructor\n        // did not create an instance property.\n        const cause = options.cause;\n        this.cause = cause;\n        if (\"stack\" in cause) {\n          this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n        }\n      }\n    }\n  }\n\n  errorClasses[name] = CustomErrorClass;\n\n  return CustomErrorClass as unknown as T;\n};\n\nfunction isObject(value) {\n  return typeof value === \"object\";\n}\n\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object: any): Error | undefined => {\n  if (object && typeof object === \"object\") {\n    try {\n      if (typeof object.message === \"string\") {\n        const msg = JSON.parse(object.message);\n        if (msg.message && msg.name) {\n          object = msg;\n        }\n      }\n    } catch (e) {\n      // nothing\n    }\n\n    let error;\n    if (typeof object.name === \"string\") {\n      const { name } = object;\n      const des = deserializers[name];\n      if (des) {\n        error = des(object);\n      } else {\n        let constructor = name === \"Error\" ? Error : errorClasses[name];\n\n        if (!constructor) {\n          console.warn(\"deserializing an unknown class '\" + name + \"'\");\n          constructor = createCustomErrorClass(name);\n        }\n\n        error = Object.create(constructor.prototype);\n        try {\n          for (const prop in object) {\n            if (object.hasOwnProperty(prop)) {\n              error[prop] = object[prop];\n            }\n          }\n        } catch (e) {\n          // sometimes setting a property can fail (e.g. .name)\n        }\n      }\n    } else {\n      if (typeof object.message === \"string\") {\n        error = new Error(object.message);\n      }\n    }\n\n    if (error && !error.stack && Error.captureStackTrace) {\n      Error.captureStackTrace(error, deserializeError);\n    }\n    return error;\n  }\n  return new Error(String(object));\n};\n\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (\n  value: undefined | To | string | (() => unknown)\n): undefined | To | string => {\n  if (!value) return value;\n  if (typeof value === \"object\") {\n    return destroyCircular(value, []);\n  }\n  if (typeof value === \"function\") {\n    return `[Function: ${value.name || \"anonymous\"}]`;\n  }\n  return value;\n};\n\ninterface To {\n  name?: string;\n  message?: string;\n  stack?: string;\n}\n\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from: To, seen: Array<To>): To {\n  const to: To = {};\n  seen.push(from);\n  for (const key of Object.keys(from)) {\n    const value = from[key];\n    if (typeof value === \"function\") {\n      continue;\n    }\n    if (!value || typeof value !== \"object\") {\n      to[key] = value;\n      continue;\n    }\n    if (seen.indexOf(from[key]) === -1) {\n      to[key] = destroyCircular(from[key], seen.slice(0));\n      continue;\n    }\n    to[key] = \"[Circular]\";\n  }\n  if (typeof from.name === \"string\") {\n    to.name = from.name;\n  }\n  if (typeof from.message === \"string\") {\n    to.message = from.message;\n  }\n  if (typeof from.stack === \"string\") {\n    to.stack = from.stack;\n  }\n  return to;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}