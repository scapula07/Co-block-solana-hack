{"ast":null,"code":"const {\n  EventEmitter\n} = require('events');\nconst Logger = require('./Logger');\nclass EnhancedEventEmitter extends EventEmitter {\n  constructor(logger) {\n    super();\n    this.setMaxListeners(Infinity);\n    this._logger = logger || new Logger('EnhancedEventEmitter');\n  }\n  safeEmit(event) {\n    try {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      this.emit(event, ...args);\n    } catch (error) {\n      this._logger.error('safeEmit() | event listener threw an error [event:%s]:%o', event, error);\n    }\n  }\n  async safeEmitAsPromise(event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    return new Promise((resolve, reject) => {\n      this.safeEmit(event, ...args, resolve, reject);\n    });\n  }\n}\nmodule.exports = EnhancedEventEmitter;","map":{"version":3,"names":["EventEmitter","require","Logger","EnhancedEventEmitter","constructor","logger","setMaxListeners","Infinity","_logger","safeEmit","event","args","emit","error","safeEmitAsPromise","Promise","resolve","reject","module","exports"],"sources":["/Users/user/Desktop/solana-hack-1/client/node_modules/protoo-client/lib/EnhancedEventEmitter.js"],"sourcesContent":["const { EventEmitter } = require('events');\nconst Logger = require('./Logger');\n\nclass EnhancedEventEmitter extends EventEmitter\n{\n\tconstructor(logger)\n\t{\n\t\tsuper();\n\t\tthis.setMaxListeners(Infinity);\n\n\t\tthis._logger = logger || new Logger('EnhancedEventEmitter');\n\t}\n\n\tsafeEmit(event, ...args)\n\t{\n\t\ttry\n\t\t{\n\t\t\tthis.emit(event, ...args);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis._logger.error(\n\t\t\t\t'safeEmit() | event listener threw an error [event:%s]:%o',\n\t\t\t\tevent, error);\n\t\t}\n\t}\n\n\tasync safeEmitAsPromise(event, ...args)\n\t{\n\t\treturn new Promise((resolve, reject) =>\n\t\t{\n\t\t\tthis.safeEmit(event, ...args, resolve, reject);\n\t\t});\n\t}\n}\n\nmodule.exports = EnhancedEventEmitter;\n"],"mappings":"AAAA,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC1C,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAElC,MAAME,oBAAoB,SAASH,YAAY,CAC/C;EACCI,WAAW,CAACC,MAAM,EAClB;IACC,KAAK,EAAE;IACP,IAAI,CAACC,eAAe,CAACC,QAAQ,CAAC;IAE9B,IAAI,CAACC,OAAO,GAAGH,MAAM,IAAI,IAAIH,MAAM,CAAC,sBAAsB,CAAC;EAC5D;EAEAO,QAAQ,CAACC,KAAK,EACd;IACC,IACA;MAAA,kCAHkBC,IAAI;QAAJA,IAAI;MAAA;MAIrB,IAAI,CAACC,IAAI,CAACF,KAAK,EAAE,GAAGC,IAAI,CAAC;IAC1B,CAAC,CACD,OAAOE,KAAK,EACZ;MACC,IAAI,CAACL,OAAO,CAACK,KAAK,CACjB,0DAA0D,EAC1DH,KAAK,EAAEG,KAAK,CAAC;IACf;EACD;EAEA,MAAMC,iBAAiB,CAACJ,KAAK,EAC7B;IAAA,mCADkCC,IAAI;MAAJA,IAAI;IAAA;IAErC,OAAO,IAAII,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KACnC;MACC,IAAI,CAACR,QAAQ,CAACC,KAAK,EAAE,GAAGC,IAAI,EAAEK,OAAO,EAAEC,MAAM,CAAC;IAC/C,CAAC,CAAC;EACH;AACD;AAEAC,MAAM,CAACC,OAAO,GAAGhB,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}